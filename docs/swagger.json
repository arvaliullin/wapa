{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/benchmark": {
            "get": {
                "description": "Получает результаты по заданной метрике (mean, median, stddev, min, max) и архитектуре (например, arm64, amd64)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benchmark"
                ],
                "summary": "Получить результаты бенчмарков",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Метрика (mean, median, stddev, min, max)",
                        "name": "metric",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Архитектура (arm64, amd64)",
                        "name": "arch",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.BenchmarkResults"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе из-за отсутствия параметров",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/benchmark-diff": {
            "get": {
                "description": "Возвращает разницу по каждому языку между функцией и её Mock-версией (например, d_factorize = factorize - factorizeMock)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benchmark"
                ],
                "summary": "Получить разницу между функцией и Mock",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Метрика (mean, median, stddev, min, max)",
                        "name": "metric",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Архитектура (arm64, amd64)",
                        "name": "arch",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.BenchmarkResults"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе из-за отсутствия параметров",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/benchmark-diff/all": {
            "get": {
                "description": "Возвращает массив разниц по каждому языку между функцией и её Mock-версией для всех архитектур и метрик (например, d_factorize = factorize - factorizeMock).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benchmark"
                ],
                "summary": "Получить разницу между функцией и Mock по всем архитектурам и метрикам",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.BenchmarkResults"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/benchmark/all": {
            "get": {
                "description": "Возвращает массив всех результатов бенчмарков по всем архитектурам (например, amd64, arm64) и всем метрикам (mean, median, stddev, min, max).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benchmark"
                ],
                "summary": "Получить результаты бенчмарков по всем архитектурам и метрикам",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.BenchmarkResults"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/benchmark/mock": {
            "get": {
                "description": "Возвращает только бенчмарки с постфиксом Mock в имени функции.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benchmark"
                ],
                "summary": "Получить результаты только Mock-функций",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Метрика (mean, median, stddev, min, max)",
                        "name": "metric",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Архитектура (arm64, amd64)",
                        "name": "arch",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.BenchmarkResults"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе из-за отсутствия параметров",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/benchmark/not-mock": {
            "get": {
                "description": "Возвращает только бенчмарки без постфикса Mock в имени функции.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benchmark"
                ],
                "summary": "Получить результаты только \"реальных\" функций (без Mock)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Метрика (mean, median, stddev, min, max)",
                        "name": "metric",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Архитектура (arm64, amd64)",
                        "name": "arch",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.BenchmarkResults"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе из-за отсутствия параметров",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/benchmark/reliable": {
            "get": {
                "description": "Возвращает список имён функций, у которых Cv (stddev/mean) для всех языков не превышает заданный порог, по выбранной архитектуре.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Benchmark"
                ],
                "summary": "Получить надёжные функции по коэффициенту вариации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Архитектура (amd64, arm64 и т.д.)",
                        "name": "arch",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Максимально допустимое значение Cv (по умолчанию 0.2)",
                        "name": "cv-threshold",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Минимальное значение среднего (по умолчанию 1e-12)",
                        "name": "min-mean",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ReliableBenchmarksResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Данные не найдены",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/design": {
            "post": {
                "description": "Создает новый эксперимент и загружает связанные файлы (JS и/или Wasm)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Design"
                ],
                "summary": "Создать новый эксперимент",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя эксперимента",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Язык реализации модуля",
                        "name": "lang",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл JavaScript",
                        "name": "js",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Файл WebAssembly",
                        "name": "wasm",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "JSON-строка с функциями",
                        "name": "functions",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного эксперимента",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/design/{id}": {
            "delete": {
                "description": "Удаляет эксперимент и связанные файлы по ID",
                "tags": [
                    "Design"
                ],
                "summary": "Удалить эксперимент",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID эксперимента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Эксперимент не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/design/{id}/files/{type}": {
            "get": {
                "description": "Скачивает JavaScript или WebAssembly файл эксперимента по ID",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Design"
                ],
                "summary": "Скачать файл эксперимента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID эксперимента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип файла (js или wasm)",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Файл или эксперимент не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/designs": {
            "get": {
                "description": "Возвращает список планов экспериментов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Design"
                ],
                "summary": "получает список планов экспериментов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Design"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/experiment/{uid}/start": {
            "post": {
                "description": "Запуск нового эксперимента по UID и параметрам из тела запроса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Experiment"
                ],
                "summary": "Запуск эксперимента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Уникальный идентификатор дизайна (Design ID)",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Параметры запуска эксперимента",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Эксперимент успешно запущен",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе из-за отсутствия UID или некорректных данных",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Дизайн не найден по переданному UID",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.BenchmarkCase": {
            "type": "object",
            "properties": {
                "cpp": {
                    "type": "number",
                    "example": 0.1728
                },
                "go": {
                    "type": "number",
                    "example": 0.6173
                },
                "javascript": {
                    "type": "number",
                    "example": 0.1379
                },
                "name": {
                    "type": "string",
                    "example": "fibonacciIterative"
                },
                "rust": {
                    "type": "number",
                    "example": 0.1417
                }
            }
        },
        "domain.BenchmarkResults": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string",
                    "example": "arm64"
                },
                "metric": {
                    "type": "string",
                    "example": "median"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.BenchmarkCase"
                    }
                }
            }
        },
        "domain.Design": {
            "type": "object",
            "properties": {
                "functions": {
                    "description": "Массив функций и их аргументов",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Function"
                    }
                },
                "id": {
                    "description": "Идентификатор плана эксперимента",
                    "type": "string",
                    "example": "exp123"
                },
                "js": {
                    "description": "Имя файла JavaScript",
                    "type": "string",
                    "example": "index.js"
                },
                "lang": {
                    "description": "Язык реализации модуля",
                    "type": "string",
                    "example": "go"
                },
                "name": {
                    "description": "Имя эксперимента",
                    "type": "string",
                    "example": "x2Integrate"
                },
                "wasm": {
                    "description": "Имя модуля WebAssembly",
                    "type": "string",
                    "example": "module.wasm"
                }
            }
        },
        "domain.Function": {
            "type": "object",
            "properties": {
                "args": {
                    "description": "Список числовых аргументов функции",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "function": {
                    "description": "Имя функции",
                    "type": "string",
                    "example": "calc"
                }
            }
        },
        "handlers.ReliableBenchmarksResponse": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}